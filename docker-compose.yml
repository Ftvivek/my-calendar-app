# docker-compose.yml (Configured for Method 1)

version: '3.8' # Obsolete but okay

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80" # Or your chosen frontend port
    restart: always
    depends_on: # Wait for backend
      - backend

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Or your chosen backend port
    restart: always
    environment: # Keep only non-DB env vars needed directly by compose/app startup
      NODE_ENV: development
      # PORT: 5000 # Add this if your app reads port from process.env.PORT
    volumes: # Keep uploads volume if needed by your app
      - uploads:/app/uploads
    depends_on: # Wait for database
      - db

  # --- Database Service Definition ---
  db:
    image: postgres:15-alpine # Or your desired Postgres version
    environment:
      # These read from the ROOT .env file (MY-CALENDAR-APP/.env)
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      # Map host port 5433 to container port 5432 for optional external access
      - "5433:5432"
    volumes:
      # Mount the init scripts folder (contains your .sql dump)
      - ./db_init:/docker-entrypoint-initdb.d
      # Mount the named volume for persistent data storage
      - postgres_data:/var/lib/postgresql/data
    restart: always
  # --- End Database Service ---

# --- Volume Definitions ---
volumes:
  postgres_data: # For persisting DB data between runs
  uploads: # For persisting uploaded files (if needed)